<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="HomeText" xml:space="preserve">
    <value>Herzlich willkommen auf dem Portal des Elektronischen Tickets zur Einreise in die Dominikanische Republik und Ausreise aus der Dominikanischen Republik</value>
  </data>
  <data name="LoginToForm" xml:space="preserve">
    <value>Einstieg ins Formular</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Herzlich willkommen auf dem Portal des Elektronischen Tickets zur Einreise in die und Ausreise aus der Dominikanischen Republik</value>
  </data>
  <data name="E-Ticket" xml:space="preserve">
    <value>Elektronisches Ticket für die Einreise in die Dominikanische Republik und Ausreise aus der Dominikanischen Republik</value>
  </data>
  <data name="StepsToContinue" xml:space="preserve">
    <value>Schritte, um Ihre Anfrage zu tätigen</value>
  </data>
  <data name="Request" xml:space="preserve">
    <value>Anfrage</value>
  </data>
  <data name="S1.P1" xml:space="preserve">
    <value>Klicken Sie auf die Taste &lt;b&gt;Einstieg ins Formular&lt;/b&gt;</value>
  </data>
  <data name="InsideForm" xml:space="preserve">
    <value>Im Formular</value>
  </data>
  <data name="S1.P2" xml:space="preserve">
    <value>Tragen Sie die benötigten Daten korrekt ein.</value>
  </data>
  <data name="S1.P3" xml:space="preserve">
    <value>Füllen Sie die anderen erforderlichen Felder aus.</value>
  </data>
  <data name="S1.P4" xml:space="preserve">
    <value>Klicken Sie auf die Taste Abschicken</value>
  </data>
  <data name="S1.P5" xml:space="preserve">
    <value>Wenn Sie bereits über eine Anmeldung verfügen, klicken Sie Zugriff, geben Sie Ihren Anmeldungscode ein und beantworten Sie Ihre Sicherheitsfrage.

    </value>
  </data>
  <data name="S2.P1" xml:space="preserve">
    <value>Speichern Sie den generierten Anmeldungscode. Mit diesem Code und der Sicherheitsfrage können Sie das Formular jederzeit aufrufen.</value>
  </data>
  <data name="S2.P2" xml:space="preserve">
    <value>Tragen Sie die benötigten Daten korrekt ein.</value>
  </data>
  <data name="S2.P3" xml:space="preserve">
    <value>Die einmalige Zollerklärung ist nur für Erwachsene (18+) erforderlich</value>
  </data>
  <data name="S2.P4" xml:space="preserve">
    <value>Die vom Gesundheitsministerium erforderliche eidesstaatliche Erklärung zur Gesundheit ist nur bei Einreise ins Land erforderlich.</value>
  </data>
  <data name="CompleteForm" xml:space="preserve">
    <value>Ausgefülltes Formular</value>
  </data>
  <data name="S3.P1" xml:space="preserve">
    <value>Es wird ein Ticket mit einem QR Code  generiert</value>
  </data>
  <data name="S3.P2" xml:space="preserve">
    <value>Klicken Sie auf das Feld PDF Erstellung, wenn Sie das PDF auf Ihrem Gerät speichern möchten</value>
  </data>
  <data name="S3.P3" xml:space="preserve">
    <value>Bewahren Sie das Dokument auf, da es der Airline beim Check In vorgelegt werden muss.</value>
  </data>
  <data name="S4.P1" xml:space="preserve">
    <value>Wenn Sie beim Airline-Schalter beim &lt;b&gt;Check In&lt;/b&gt; sind, zeigen Sie diesen QR Code.</value>
  </data>
  <data name="B1.P1" xml:space="preserve">
    <value>Es ist ein digitales Formular, das von mehreren Institutionen erfordert wird, um in das Staatsgebiet einzureisen oder es zu verlassen.</value>
  </data>
  <data name="B1.P2" xml:space="preserve">
    <value>Für die Zoll- und Einwanderungsbehörde sowie für das Gesundheitsministerium muss jeder Passagier die Informationen auf dem elektronischen Ticket gemäß des dominikanischen Gesetzes 285-04, 115-17, 72-02 und 226-6 wahrheitsgemäß vervollständigen.</value>
  </data>
  <data name="B1.T1" xml:space="preserve">
    <value>WAS IST DAS &lt;b&gt;ELEKTRONISCHE TICKET&lt;/b&gt;?</value>
  </data>
  <data name="Banner" xml:space="preserve">
    <value>Folgende Browser werden aktuell von der Plattform unterstützt:</value>
  </data>
</root>